<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CannotLocatePackageDirectory" xml:space="preserve">
    <value>The package directory '{0}'. Does not exist exist, cannot load the code factory package configuration. No automation will be loaded.</value>
  </data>
  <data name="CommandLineHelpMessage" xml:space="preserve">
    <value>Utility that create a CodeFactory configuration and package.\r\nThe following are the command switches supported by the configurtion manager.\r\nThe configuration manager will ignore unknown switches.\r\n\r\nSwitches\r\n? = Displays this help message\r\n\r\nHelp = displays this help message\r\n\r\n/Help = Displays this help message\r\n\r\n/DebugConfig &lt;PathToDLL&gt; = creates a debug configuration for the current project.\r\n</value>
  </data>
  <data name="CommandLineTitle" xml:space="preserve">
    <value>Code Factory Packaging Utility Version {0}\r\nCopyright 2013 LifeCycle Delivery Services, Inc.\r\n</value>
  </data>
  <data name="ConfigNotInPackage" xml:space="preserve">
    <value>Cannot find the factory configuration in the package file '{0}'</value>
  </data>
  <data name="ConfigurationFileCreatedSuccessfully" xml:space="preserve">
    <value>Successfully created the configuration file '{0}'.\r\nConfiguration file has the following resources defined.\r\nAutomation Libraries - '{1}' \r\nSupporting Libraries - '{2}' \r\nAutomation Actions -'{3}' \r\n</value>
  </data>
  <data name="ConfigurationFileNotFound" xml:space="preserve">
    <value>The code factory </value>
  </data>
  <data name="ConfigurationFileNotProvided" xml:space="preserve">
    <value>Cannot load the factory configuration file, becuase no configuration file was provided.</value>
  </data>
  <data name="CreatingConfigurationFile" xml:space="preserve">
    <value>Creating the configuration file '{0}'</value>
  </data>
  <data name="DeletingConfigurationFile" xml:space="preserve">
    <value>Deleting the configuration file '{0}'</value>
  </data>
  <data name="DirectoryDoesNotExistForConfigFile" xml:space="preserve">
    <value>Cannot find the directory that will be used to store the configuration file.</value>
  </data>
  <data name="FactoryConfigCouldNotBeloaded" xml:space="preserve">
    <value>The factory configuration could not be loaded from the package file '{0}'</value>
  </data>
  <data name="FailedToCreateConfigurationFile" xml:space="preserve">
    <value>Failed to create the configuration file '{0}', the following error occured during the creation process, '{1}'</value>
  </data>
  <data name="FailedToDeleteConfigFile" xml:space="preserve">
    <value>Failed to delete the configuration file '{0}', the following error occured during the delete process, '{1}'</value>
  </data>
  <data name="FailedToLoadAction" xml:space="preserve">
    <value>The code factory command '{0}', could not be loaded. This factory command will not avaliable for usage.</value>
  </data>
  <data name="FailedToLoadConfigurationData" xml:space="preserve">
    <value>Failed to load configuration data, will not be able to create a configuration file.</value>
  </data>
  <data name="InvalidAssemblyPath" xml:space="preserve">
    <value>The code factory command '{0}', could not be loaded due to an invalid assembly path. This factory command will not be loaded.</value>
  </data>
  <data name="LibrariesNotLoaded" xml:space="preserve">
    <value>An error occured and the Code Factory libraries could not be loaded.</value>
  </data>
  <data name="LibraryLoadError" xml:space="preserve">
    <value>An error occured while loading the library '{0}', no automation will be loaded.</value>
  </data>
  <data name="LibraryNotInPackage" xml:space="preserve">
    <value>The library '{0}'  was not found in the package. No automation will be loaded.</value>
  </data>
  <data name="LibraryNotLoaded" xml:space="preserve">
    <value>One of the code factory libraries was not loaded. No automation will be loaded.</value>
  </data>
  <data name="NoLibraryDirectory" xml:space="preserve">
    <value>No directory was provided. cannot load libraries.</value>
  </data>
  <data name="NoPackageDirectory" xml:space="preserve">
    <value>No package directory was provided cannot load the code factory package configuration. No automation will be loaded.</value>
  </data>
  <data name="NoPackageFile" xml:space="preserve">
    <value>No package file was provided, cannot load libraries.</value>
  </data>
  <data name="NoVisualStudioActions" xml:space="preserve">
    <value>Code factory did not provide an instance of the commands to be injected into visual studio commands being loaded. No automation will be loaded.</value>
  </data>
  <data name="PackageDirectoryCannotBeCreated" xml:space="preserve">
    <value>The package directory for the package '{0}' could not be created. Cannot load the code factory automation.</value>
  </data>
  <data name="PackageDirectoryDoesNotExist" xml:space="preserve">
    <value>The target package directory of '{0}', does not exist. cannot load the package.</value>
  </data>
  <data name="PackageFileNotFound" xml:space="preserve">
    <value>The package file '{0}' could not be found. No automation functionality will be loaded.</value>
  </data>
  <data name="PackageLoadError" xml:space="preserve">
    <value>An error occured while loading the code factory package. No automation will be avaliable with this project.</value>
  </data>
</root>